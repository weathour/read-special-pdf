{
  "file_name": "Couteau 等 - 2025 - Multi-Key Homomorphic Secret Sharing.pdf",
  "generated_at": "2025-07-10 03:58:43",
  "structured_info": {
    "title_cn": "多密钥同态秘密共享",
    "title_en": "Multi-Key Homomorphic Secret Sharing",
    "category": "Cryptography",
    "topics": [
      "Homomorphic Secret Sharing",
      "Secure Computation",
      "Cryptographic Protocols"
    ],
    "keywords": [
      "Homomorphic Secret Sharing",
      "Multi-Key Cryptography",
      "DDH",
      "DCR",
      "Class Groups",
      "Secure Computation"
    ],
    "abstract": "Homomorphic secret sharing (HSS) is a distributed analogue of fully homomorphic encryption (FHE) where following an input-sharing phase, two or more parties can locally compute a function over their private inputs to obtain shares of the function output. Over the last decade, HSS schemes have been constructed from an array of different assumptions. However, all existing HSS schemes, except ones based on assumptions known to imply multi-key FHE, require a public-key infrastructure (PKI) or a correlated setup between parties. This limitation carries over to many applications of HSS. In this work, we construct multi-key homomorphic secret sharing (MKHSS), where given only a common reference string (CRS), two parties can secret share their inputs to each other and then perform local computations as in HSS, eliminating the need for PKI or a correlated setup.",
    "methodology": "Cryptographic constructions based on decisional Diffie-Hellman (DDH), decisional composite residuosity (DCR), and DDH-like assumptions in class groups; utilization of distributed discrete logarithm (DDLog) and non-interactive discrete log sharing (NIDLS) frameworks.",
    "conclusion": "MKHSS schemes supporting NC1 computations are constructed under DDH, DCR, and class group assumptions, enabling applications such as succinct two-round secure computation, attribute-based non-interactive key exchange (NIKE), public-key pseudorandom correlation functions (PCFs), and silent multi-party computation with improved communication efficiency.",
    "authors": [
      "Geoffroy Couteau",
      "Lalita Devadas",
      "Aditya Hegde",
      "Abhishek Jain",
      "Sacha Servan-Schreiber"
    ],
    "publication_year": "2025",
    "venue": "EUROCRYPT",
    "doi": "10.1007/978-3-031-91092-0_1",
    "bibtex_citation": "Couteau_Multi_2025",
    "analysis": {
      "Overview": "The paper introduces Multi-Key Homomorphic Secret Sharing (MKHSS), enabling parties to homomorphically compute over secret-shared inputs without PKI or correlated setup. It presents constructions from DDH, DCR, and class group assumptions, with applications to secure computation, key exchange, and pseudorandom correlations.",
      "Background_and_Motivation": [
        "Existing HSS schemes require PKI or correlated setups, limiting applications like sublinear secure computation to three rounds.",
        "To eliminate setup overhead and enable optimal two-round protocols from non-FHE assumptions.",
        "Authors argue that setup requirements hinder practical deployment and that MKHSS is essential for efficient, flexible cryptographic applications.",
        "Links MKHSS to broader challenges in multi-party computation, establishing its significance for protocols requiring minimal interaction.",
        "Contributes to cryptography, specifically homomorphic encryption, secure computation, and multi-party protocols."
      ],
      "Conceptual_Framework_and_Innovations": [
        "MKHSS: Distributed homomorphic computation without PKI; RMS Programs: Restricted Multiplication Straight-line programs for NC1 computations; DDLog: Distributed discrete logarithm for share conversion.",
        "MKHSS extends HSS by synchronizing input shares under a joint key via linear decryption and 'flipped' ElGamal encryption. RMS programs enable function evaluation, while DDLog facilitates share conversions.",
        "Assumes hardness of DDH/DCR/class group problems; messages bounded to prevent overflow; negligible/inverse-polynomial correctness error depending on instantiation.",
        "Introduces the first MKHSS schemes from non-FHE assumptions, expanding the knowledge of feasible setups for distributed homomorphic computation."
      ],
      "Methodology": [
        "Group-based constructions using 'flipped' ElGamal encryption and inner-product decryption; DDLog for share conversion; RMS program evaluation for NC1 functions.",
        "Novelty: Synchronization of input shares via ciphertext expansion and joint-key derivation. Applicability: Supports CRS-only setup. Rationality: Security reduces to standard assumptions; correctness ensured via message-space bounding.",
        "No empirical data; theoretical security proofs under DDH/DCR/class group assumptions. Message spaces are integers bounded to avoid overflow during computations.",
        "Rigorous reductionist security proofs; correctness error analyzed for each construction (negligible for DCR/class groups, inverse-polynomial for DDH).",
        "Follows computational cryptography paradigm, focusing on hardness assumptions to ensure security, which dictates the use of group-theoretic techniques."
      ],
      "Results": [
        "Three MKHSS instantiations: (1) DDH with transparent setup and inverse-polynomial error; (2) Class groups with transparent setup and negligible error; (3) DCR with trusted setup and negligible error. Enables two-round secure computation, attribute-based NIKE, public-key PCFs, and silent MPC with O(p) preprocessing communication.",
        "Results are significant as they remove setup barriers in HSS; reliability/stability depend on underlying hardness assumptions, with DCR/class groups offering stronger guarantees than DDH."
      ],
      "Argumentation_and_Logic": [
        "Define MKHSS → Construct via 'flipped' encryption and joint keys → Extend to applications (secure computation, NIKE, PCFs, MPC) → Provide security/correctness proofs.",
        "(1) Synchronize input shares via ciphertext expansion; (2) Compute RMS programs using DDLog; (3) Prove security via reduction to assumptions; (4) Derive applications from MKHSS properties.",
        "Strengths: Novel synchronization technique enables setup removal. Weaknesses: DDH instantiation has inherent correctness error. Rebuttals: Error is tunable; limitations are inherent to group-based approaches without FHE."
      ],
      "Strengths_and_Limitations": [
        "First MKHSS without PKI; transparent setup in class groups; enables new applications like attribute-based NIKE and public-key PCFs.",
        "DDH construction has polynomial message space and inverse-polynomial error; class group/DCR require trusted/structured CRS; not concretely efficient.",
        "Group-based assumptions restrict to NC1 computations; cannot achieve full FHE capabilities without lattice assumptions."
      ],
      "Academic_Discourse_and_Rhetoric": [
        "Positions MKHSS as a distributed analogue to multi-key FHE, advancing HSS literature by removing setup constraints.",
        "Technical terms (e.g., 'RMS programs', 'DDLog', 'flipped ElGamal'); formal tone; rhetorical emphasis on 'eliminating the need for PKI' to highlight innovation.",
        "Cites foundational HSS/FHE works to contextualize contributions; uses comparisons to prior art (e.g., 'unlike existing HSS schemes...') to establish novelty and authority."
      ],
      "Conclusions_and_Implications": [
        "MKHSS is feasible from DDH/DCR/class group assumptions, enabling two-round secure computation and non-interactive key exchange for NC1 predicates. Public-key PCFs and silent MPC with linear preprocessing are derived.",
        "Future work: Improve concrete efficiency; extend to active security or more parties; explore instantiations from other assumptions."
      ]
    }
  }
}